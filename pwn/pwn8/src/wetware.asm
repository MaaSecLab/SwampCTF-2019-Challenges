BITS 64
GLOBAL _start
_start:

;stack frame
push rbp
mov rbp, rsp
sub rsp, 0x200

;lets print message: rdi and rdx already set!
print:
mov rdi, 1
mov rsi, msg1
mov rdx, 0x27
mov rax, 1
syscall

;now read input 1 byte at a time:
mov rsi, rsp
read:
mov rax, 0
mov r10, rsp
add r10, 0x200
mov rdi, 0
mov rdx, 1
syscall

;compare to \x00 or \x0a
cmp byte [rsi], 0
jz decode
cmp byte [rsi], 0xa
jz decode
cmp rsi, r10
jge exit1
inc rsi
jmp read

;exit
decode:
mov rsi, rsp  ;key
mov rdi, msg2 ;data
xor rcx, rcx
xor rdx, rdx
loop:
mov bl, byte [rsi+rcx]
xor byte [rdi], bl
inc rdi
cmp rcx,7
jz res
inc rcx
jmp loop

res:
xor ecx, ecx
cmp rdx, 8
jz msg2
inc rdx
jmp loop


exit1:
db 0xb0,0x3c,0x48,0x31,0xff,0x0f,0x05

txt1:
db 0x48,0x31,0xc0

msg1:
db 'Holographic demux codephrase required: ',0x27

msg2:
incbin "dump.bin"
;db 	0xd2, 0x6f, 0x65, 0x6d, 0x6f, 0x26, 0xd7, 0x8b, \
;	0x6c, 0x2e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0xd9, \
;	0x4e, 0x6e, 0x65, 0x6d, 0xd7, 0x6f, 0x69, 0x63, \
;	0x6d, 0x61, 0x60, 0x39, 0x07, 0x0b, 0x49, 0x02, \
;	0x0e, 0x0d, 0x00, 0x1e, 0x1c, 0x4e, 0x02, 0x06, \
;	0x14, 0x4e, 0x09, 0x04, 0x0a, 0x1d, 0x49, 0x14, \
;	0x04, 0x1a, 0x0d, 0x04, 0x01, 0x4e, 0x10, 0x0c, \
;	0x18, 0x1c, 0x16, 0x08, 0x03, 0x08, 0x4a, 0x63
;
;mov rdi, 1
;mov rsi, msg3
;mov rdx, 0x23
;mov rax, 1
;syscall
;db 0xb0,0x3c,0x48,0x31,0xff,0x0f,0x05
;msg3:
;db 'The access key lies within yourself',0x23
